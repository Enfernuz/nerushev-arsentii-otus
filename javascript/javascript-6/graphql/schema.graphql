
# import * from 'model.graphql'

type Query {

    # Gets a product by ID.
    product(id: ID!): Product

    # Gets products by a product category.
    products(category: Category): [Product!]!

    # Gets a user by ID.
    user(id: ID!): User

    # Gets a user's cart by the user's ID.
    user_cart(user_id: ID!): ShoppingCart

    # Gets an order by ID.
    order(id: ID!): Order

    # Gets a user's orders by the user's ID with the given optional order status.
    user_orders(user_id: ID!, status: OrderStatus): [Order!]!
}

type Mutation {

    addUser(name: String!): User!
    updateUser(id: ID!, name: String!): User!
    deleteUserById(id: ID!): User!

    createProduct(product: ProductInput!): Product!
    updateProduct(id: ID!, product: ProductInput!): Product!
    deleteProductById(id: ID!): Product!

    addToCart(user_id: ID!, item: ItemInput!): Boolean!
    removeFromCart(user_id: ID!, item: ItemInput!): Boolean!
    checkoutCart(user_id: ID!): Order!

    # A dummy method to mimic the state transition of an order.
    changeOrderStatus(order_id: ID!, status: OrderStatus!): Order!
}
